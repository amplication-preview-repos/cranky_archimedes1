/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BusCreateNestedManyWithoutRoutesInput } from "./BusCreateNestedManyWithoutRoutesInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsNumber,
  Min,
  Max,
} from "class-validator";
import { Type } from "class-transformer";
import { StationWhereUniqueInput } from "../../station/base/StationWhereUniqueInput";
import { TicketCreateNestedManyWithoutRoutesInput } from "./TicketCreateNestedManyWithoutRoutesInput";

@InputType()
class RouteCreateInput {
  @ApiProperty({
    required: false,
    type: () => BusCreateNestedManyWithoutRoutesInput,
  })
  @ValidateNested()
  @Type(() => BusCreateNestedManyWithoutRoutesInput)
  @IsOptional()
  @Field(() => BusCreateNestedManyWithoutRoutesInput, {
    nullable: true,
  })
  buses?: BusCreateNestedManyWithoutRoutesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  destination?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  duration?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  routeName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  source?: string | null;

  @ApiProperty({
    required: false,
    type: () => StationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StationWhereUniqueInput)
  @IsOptional()
  @Field(() => StationWhereUniqueInput, {
    nullable: true,
  })
  station?: StationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TicketCreateNestedManyWithoutRoutesInput,
  })
  @ValidateNested()
  @Type(() => TicketCreateNestedManyWithoutRoutesInput)
  @IsOptional()
  @Field(() => TicketCreateNestedManyWithoutRoutesInput, {
    nullable: true,
  })
  tickets?: TicketCreateNestedManyWithoutRoutesInput;
}

export { RouteCreateInput as RouteCreateInput };
