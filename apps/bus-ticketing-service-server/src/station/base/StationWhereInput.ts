/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BusListRelationFilter } from "../../bus/base/BusListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringFilter } from "../../util/StringFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { RouteListRelationFilter } from "../../route/base/RouteListRelationFilter";
import { StationExitPaperListRelationFilter } from "../../stationExitPaper/base/StationExitPaperListRelationFilter";
import { TicketListRelationFilter } from "../../ticket/base/TicketListRelationFilter";
import { UserListRelationFilter } from "../../user/base/UserListRelationFilter";

@InputType()
class StationWhereInput {
  @ApiProperty({
    required: false,
    type: () => BusListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BusListRelationFilter)
  @IsOptional()
  @Field(() => BusListRelationFilter, {
    nullable: true,
  })
  buses?: BusListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  location?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => RouteListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RouteListRelationFilter)
  @IsOptional()
  @Field(() => RouteListRelationFilter, {
    nullable: true,
  })
  routes?: RouteListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => StationExitPaperListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StationExitPaperListRelationFilter)
  @IsOptional()
  @Field(() => StationExitPaperListRelationFilter, {
    nullable: true,
  })
  stationExitPapers?: StationExitPaperListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  stationName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => TicketListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TicketListRelationFilter)
  @IsOptional()
  @Field(() => TicketListRelationFilter, {
    nullable: true,
  })
  tickets?: TicketListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserListRelationFilter)
  @IsOptional()
  @Field(() => UserListRelationFilter, {
    nullable: true,
  })
  users?: UserListRelationFilter;
}

export { StationWhereInput as StationWhereInput };
