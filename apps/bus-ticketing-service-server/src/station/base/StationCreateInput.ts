/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BusCreateNestedManyWithoutStationsInput } from "./BusCreateNestedManyWithoutStationsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { RouteCreateNestedManyWithoutStationsInput } from "./RouteCreateNestedManyWithoutStationsInput";
import { StationExitPaperCreateNestedManyWithoutStationsInput } from "./StationExitPaperCreateNestedManyWithoutStationsInput";
import { TicketCreateNestedManyWithoutStationsInput } from "./TicketCreateNestedManyWithoutStationsInput";
import { UserCreateNestedManyWithoutStationsInput } from "./UserCreateNestedManyWithoutStationsInput";

@InputType()
class StationCreateInput {
  @ApiProperty({
    required: false,
    type: () => BusCreateNestedManyWithoutStationsInput,
  })
  @ValidateNested()
  @Type(() => BusCreateNestedManyWithoutStationsInput)
  @IsOptional()
  @Field(() => BusCreateNestedManyWithoutStationsInput, {
    nullable: true,
  })
  buses?: BusCreateNestedManyWithoutStationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: () => RouteCreateNestedManyWithoutStationsInput,
  })
  @ValidateNested()
  @Type(() => RouteCreateNestedManyWithoutStationsInput)
  @IsOptional()
  @Field(() => RouteCreateNestedManyWithoutStationsInput, {
    nullable: true,
  })
  routes?: RouteCreateNestedManyWithoutStationsInput;

  @ApiProperty({
    required: false,
    type: () => StationExitPaperCreateNestedManyWithoutStationsInput,
  })
  @ValidateNested()
  @Type(() => StationExitPaperCreateNestedManyWithoutStationsInput)
  @IsOptional()
  @Field(() => StationExitPaperCreateNestedManyWithoutStationsInput, {
    nullable: true,
  })
  stationExitPapers?: StationExitPaperCreateNestedManyWithoutStationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  stationName?: string | null;

  @ApiProperty({
    required: false,
    type: () => TicketCreateNestedManyWithoutStationsInput,
  })
  @ValidateNested()
  @Type(() => TicketCreateNestedManyWithoutStationsInput)
  @IsOptional()
  @Field(() => TicketCreateNestedManyWithoutStationsInput, {
    nullable: true,
  })
  tickets?: TicketCreateNestedManyWithoutStationsInput;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutStationsInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutStationsInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutStationsInput, {
    nullable: true,
  })
  users?: UserCreateNestedManyWithoutStationsInput;
}

export { StationCreateInput as StationCreateInput };
