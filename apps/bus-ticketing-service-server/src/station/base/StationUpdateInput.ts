/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BusUpdateManyWithoutStationsInput } from "./BusUpdateManyWithoutStationsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { RouteUpdateManyWithoutStationsInput } from "./RouteUpdateManyWithoutStationsInput";
import { StationExitPaperUpdateManyWithoutStationsInput } from "./StationExitPaperUpdateManyWithoutStationsInput";
import { TicketUpdateManyWithoutStationsInput } from "./TicketUpdateManyWithoutStationsInput";
import { UserUpdateManyWithoutStationsInput } from "./UserUpdateManyWithoutStationsInput";

@InputType()
class StationUpdateInput {
  @ApiProperty({
    required: false,
    type: () => BusUpdateManyWithoutStationsInput,
  })
  @ValidateNested()
  @Type(() => BusUpdateManyWithoutStationsInput)
  @IsOptional()
  @Field(() => BusUpdateManyWithoutStationsInput, {
    nullable: true,
  })
  buses?: BusUpdateManyWithoutStationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: () => RouteUpdateManyWithoutStationsInput,
  })
  @ValidateNested()
  @Type(() => RouteUpdateManyWithoutStationsInput)
  @IsOptional()
  @Field(() => RouteUpdateManyWithoutStationsInput, {
    nullable: true,
  })
  routes?: RouteUpdateManyWithoutStationsInput;

  @ApiProperty({
    required: false,
    type: () => StationExitPaperUpdateManyWithoutStationsInput,
  })
  @ValidateNested()
  @Type(() => StationExitPaperUpdateManyWithoutStationsInput)
  @IsOptional()
  @Field(() => StationExitPaperUpdateManyWithoutStationsInput, {
    nullable: true,
  })
  stationExitPapers?: StationExitPaperUpdateManyWithoutStationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  stationName?: string | null;

  @ApiProperty({
    required: false,
    type: () => TicketUpdateManyWithoutStationsInput,
  })
  @ValidateNested()
  @Type(() => TicketUpdateManyWithoutStationsInput)
  @IsOptional()
  @Field(() => TicketUpdateManyWithoutStationsInput, {
    nullable: true,
  })
  tickets?: TicketUpdateManyWithoutStationsInput;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutStationsInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutStationsInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutStationsInput, {
    nullable: true,
  })
  users?: UserUpdateManyWithoutStationsInput;
}

export { StationUpdateInput as StationUpdateInput };
